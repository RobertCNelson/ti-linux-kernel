# SPDX-License-Identifier: (GPL-2.0 OR BSD-2-Clause)
%YAML 1.2
---
$id: "http://devicetree.org/schemas/display/bridge/cdns,mhdp.yaml#"
$schema: "http://devicetree.org/meta-schemas/core.yaml#"

title: Cadence MHDP bridge

maintainers:
  - Swapnil Jakhade <sjakhade@cadence.com>
  - Yuti Amonkar <yamonkar@cadence.com>

properties:
  compatible:
    enum:
      - cdns,mhdp8546
      - ti,j721e-mhdp8546

  reg:
    minItems: 1
    maxItems: 2
    items:
      - description:
          Register block of mhdptx apb registers upto PHY mapped area(AUX_CONFIG_P).
          The AUX and PMA registers are mapped to associated phy driver.
      - description:
          Register block for DSS_EDP0_INTG_CFG_VP registers in case of TI J7 SoCs.

  reg-names:
    minItems: 1
    maxItems: 2
    items:
      - const: mhdptx
      - const: j721e-intg

  clocks:
    maxItems: 1
    description:
      DP bridge clock, it's used by the IP to know how to translate a number of
      clock cycles into a time (which is used to comply with DP standard timings
      and delays).

  phys:
    description: Phandle to the DisplyPort phy.

  ports:
    type: object
    description:
      Ports as described in Documentation/devicetree/bindings/graph.txt

    properties:
      '#address-cells':
        const: 1

      '#size-cells':
        const: 0

      port@0:
        type: object
        description:
          input port representing the DP bridge input

      port@1:
        type: object
        description:
          output port representing the DP bridge output.

    required:
      - port@0
      - port@1
      - '#address-cells'
      - '#size-cells'

allOf:
  - if:
      properties:
        compatible:
          contains:
            const: ti,j721e-mhdp8546
    then:
      properties:
        reg:
          minItems: 2
        reg-names:
          minItems: 2

required:
  - compatible
  - clocks
  - reg
  - reg-names
  - phys
  - ports

additionalProperties: false

examples:
  - |
    mhdp: dp-bridge@f0fb000000 {
        compatible = "cdns,mhdp8546";
        reg = <0xf0 0xfb000000 0x0 0x1000000>;
        reg-names = "mhdptx";
        clocks = <&mhdp_clock>;
        phys = <&dp_phy>;

        ports {
              #address-cells = <1>;
              #size-cells = <0>;

              port@0 {
                     reg = <0>;
                     dp_bridge_input: endpoint {
                        remote-endpoint = <&xxx_dpi_output>;
                     };
              };

              port@1 {
                     reg = <1>;
                     dp_bridge_output: endpoint {
                        remote-endpoint = <&xxx_dp_connector_input>;
                     };
              };
        };
    };
...
