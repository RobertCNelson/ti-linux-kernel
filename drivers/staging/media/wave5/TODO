* Mutli-stream Test

* Loop Test

* Handle interrupts better

  Currently the interrupt handling uses an unusual design employing a kfifo to
  transfer irq status to irq thread. This was done as a work around for dropped
  interrupts seen with IRQF_ONESHOT based handling.

  This needs further investigation and fixing properly, with the aid of
  C&M and StarFive engineers.

* appropreate error handling:
allocation failure, mutex acquire failure etc.

* remove all unused struct fields

* change struct fields to 'bool' type or bitfield when appropreate
Likely good candidates are fields named '*_enable' , '*_on'

* handle vdi_allocate_dma_memory failure , each function has to clean after itself

* make sure that 'u32', 's32' etc. are only used when reading/writing hw
and change s32 to u32 when s32 is not required

* power management handling - add (runtime_)suspen/resume cb where the clock is enabled

* fix checkpatch issues (mostly fixes , only left to fix MACRO_ARG_REUSE, LONG_LINE)

* revise logic of wave5_vpu_(dec/enc)_register_framebuffer

* check if the  normal kernel endianness/__swab32 routines are sufficient. (instead of the ones
  implemented in the driver
