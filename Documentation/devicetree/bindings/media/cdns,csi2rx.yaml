# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/media/cdns,csi2rx.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: Cadence MIPI-CSI2 RX controller

description: |
  The Cadence MIPI-CSI2 RX controller is a CSI-2 bridge supporting up to 4 CSI
  lanes in input, and 4 different pixel streams in output.

maintainers:
  - Pratyush Yadav <p.yadav@ti.com>

properties:
  compatible:
    contains:
      const: cdns,csi2rx

  reg:
    maxItems: 1

  clocks:
    minItems: 3
    maxItems: 6

  clock-names:
    minItems: 3
    maxItems: 6
    items:
      - const: sys_clk # main clock
      - const: p_clk # register bank clock
      - const: pixel_if0_clk # pixel stream 0 output clock
      - const: pixel_if1_clk # pixel stream 1 output clock
      - const: pixel_if2_clk # pixel stream 2 output clock
      - const: pixel_if3_clk # pixel stream 3 output clock

  phys:
    maxItems: 1
    description: phandle to the external D-PHY

  phy-names:
    items:
      - const: dphy

  power-domains:
    maxItems: 1

  ports:
    $ref: /schemas/graph.yaml#/properties/ports

    properties:
      port@0:
        $ref: /schemas/graph.yaml#/$defs/port-base
        unevaluatedProperties: false
        description: CSI-2 input

        properties:
          endpoint:
            $ref: video-interfaces.yaml#
            unevaluatedProperties: false

            properties:
              clock-lanes:
                maxItems: 1

              data-lanes:
                $ref: /schemas/types.yaml#/definitions/uint32-array
                minItems: 1
                maxItems: 4
                uniqueItems: true
                items:
                  maximum: 4

            required:
              - clock-lanes
              - data-lanes

      port@1:
        $ref: /schemas/graph.yaml#/properties/port
        description: Stream 0 output

      port@2:
        $ref: /schemas/graph.yaml#/properties/port
        description: Stream 1 output

      port@3:
        $ref: /schemas/graph.yaml#/properties/port
        description: Stream 2 output

      port@4:
        $ref: /schemas/graph.yaml#/properties/port
        description: Stream 3 output

    required:
      - port@0


dependencies:
  phys: [ 'phy-names' ]
  phy-names: [ 'phys' ]

required:
  - compatible
  - reg
  - clocks
  - clock-names

additionalProperties: false

examples:
  - |
    csi2rx: csi-bridge@d060000 {
      compatible = "cdns,csi2rx";
      reg = <0x0d060000 0x1000>;
      clocks = <&byteclock>, <&byteclock>,
        <&coreclock>, <&coreclock>,
        <&coreclock>, <&coreclock>;
      clock-names = "sys_clk", "p_clk",
              "pixel_if0_clk", "pixel_if1_clk",
              "pixel_if2_clk", "pixel_if3_clk";
      phys = <&dphy0>;
      phy-names = "dphy";

      ports {
        #address-cells = <1>;
        #size-cells = <0>;

        port@0 {
          reg = <0>;

          csi2rx_in_sensor: endpoint {
            remote-endpoint = <&sensor_out_csi2rx>;
            clock-lanes = <0>;
            data-lanes = <1 2>;
          };
        };

        port@1 {
          reg = <1>;

          csi2rx_out_grabber0: endpoint {
            remote-endpoint = <&grabber0_in_csi2rx>;
          };
        };

        port@2 {
          reg = <2>;

          csi2rx_out_grabber1: endpoint {
            remote-endpoint = <&grabber1_in_csi2rx>;
          };
        };

        port@3 {
          reg = <3>;

          csi2rx_out_grabber2: endpoint {
            remote-endpoint = <&grabber2_in_csi2rx>;
          };
        };

        port@4 {
          reg = <4>;

          csi2rx_out_grabber3: endpoint {
            remote-endpoint = <&grabber3_in_csi2rx>;
          };
        };
      };
    };
