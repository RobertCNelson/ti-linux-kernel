# SPDX-License-Identifier: (GPL-2.0-only or BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/remoteproc/ti,pru-consumer.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: Common TI PRU Consumer Binding

maintainers:
  - Suman Anna <s-anna@ti.com>

description: |
  A PRU application/consumer/user node typically uses one or more PRU device
  nodes to implement a PRU application/functionality. Each application/client
  node would need a reference to at least a PRU node, and optionally define
  some properties needed for hardware/firmware configuration. The below
  properties are a list of common properties supported by the PRU remoteproc
  infrastructure.

  The application nodes shall define their own bindings like regular platform
  devices, so below are in addition to each node's bindings.

properties:
  prus:
    $ref: /schemas/types.yaml#/definitions/phandle-array
    description: phandles to the PRU, RTU or Tx_PRU nodes used

  firmware-name:
    $ref: /schemas/types.yaml#/definitions/string-array
    description: |
      firmwares for the PRU cores, the default firmware for the core from
      the PRU node will be used if not provided. The firmware names should
      correspond to the PRU cores listed in the 'prus' property

  ti,pruss-gp-mux-sel:
    $ref: /schemas/types.yaml#/definitions/uint32-array
    enum: [0, 1, 2, 3, 4]
    description: |
      array of values for the GP_MUX_SEL under PRUSS_GPCFG register for a PRU.
      This selects the internal muxing scheme for the PRU instance. Values
      should correspond to the PRU cores listed in the 'prus' property. The
      GP_MUX_SEL setting is a per-slice setting (one setting for PRU0, RTU0,
      and Tx_PRU0 on K3 SoCs). Use the same value for all cores within the
      same slice in the associative array. If the array size is smaller than
      the size of 'prus' property, the default out-of-reset value (0) for the
      PRU core is used.

  ti,pru-interrupt-map:
    $ref: /schemas/types.yaml#/definitions/uint32-array
    description: |
      PRU interrupt mappings, containing an array of entries with each entry
      consisting of 4 cell-values. First one is an index towards the "prus"
      property to identify the PRU core for the interrupt map, second is the
      PRU System Event id, third is the PRU interrupt channel id and fourth
      is the PRU host interrupt id. If provided, this map will supercede any
      other configuration provided through firmware
    minItems: 1
    maxItems: 64
    items:
      items:
        - description: index towards the "prus" property to identify the PRU core
                       for the interrupt map
        - description: PRU System Event id
        - description: PRU interrupt channel id
        - description: PRU host interrupt id

required:
 - prus

dependencies:
  firmware-name: [ prus ]
  ti,pruss-gp-mux-sel: [ prus ]
  ti,pru-interrupt-map: [ prus ]

examples:
  - |
    /* PRU application node example */
    pru-app {
        prus = <&pru0>, <&pru1>;
        firmware-name = "pruss-app-fw0", "pruss-app-fw1";
        ti,pruss-gp-mux-sel = <2>, <1>;
        /* setup interrupts for prus:
           prus[0] => pru0: ev=16, chnl=2, host-irq=7,
           prus[1] => pru1: ev=19, chnl=1, host-irq=3 */
        ti,pru-interrupt-map = <0 16 2 7>, <1 19 1 3>;
    };
